@model AllocationViewModel

@{
    ViewData["Title"] = "Index";
}



<!doctype html>
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="~/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/docs.css" rel="stylesheet">

    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/js/bootstrap.bundle.min.js"></script>
    <style>
        body {
            margin-top: 100px;
        }

        .request-container {
            max-height: 400px; /* Set the desired height */
            overflow-y: auto; /* Enable vertical scrolling */
        }

        .header {
            position: sticky;
            top: 0;
            padding: 10px;
            background-color: #f8f9fa;
            font-weight: bold;
            z-index: 1;
        }

    </style>
    <title>Hello, world!</title>

</head>
<body>
    
    <div class="row row-cols-1 row-cols-md-3 g-4">
        <div class="col">
            <div class="request-container">
                <div class="header">Vehicle Request Allocations</div>
                @if (Model.Requests.Any() != null)
                {
                    @foreach (var request in Model.Requests.Where(a => a.Status == "Pending"))
                    {
                        <div class="card border-warning mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Request ID: @request.Id</h5>
                                <p class="card-text">Date: @request.DateTime.ToString("MMMM d, yyyy")</p>
                                <p class="card-text">Reason: @request.Purpose</p>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Department : @request.Department</li>
                                <li class="list-group-item">Location: @request.Location</li>
                                <li class="list-group-item">Passengers: @request.Passengers</li>
                            </ul>
                            <div class="card-footer">
                                <strong>Priority: </strong>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>No vehicle request allocations available.</p>
                }
            </div>
        </div>
       
      

        <div class="col">
            <div class="card">
                <div class="card-header">
                    Vehicle Status
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Out Of Service <span class="badge bg-danger"><i class="bi bi-exclamation-circle"></i> @ViewBag.OutOfServiceCount</span></li>
                    <li class="list-group-item">Active <span class="badge bg-success"><i class="bi bi-check-circle"></i> @ViewBag.ActiveCount</span></li>
                    <li class="list-group-item">Available <span class="badge bg-primary"><i class="bi bi-check-circle-fill"></i> @ViewBag.AvailableCount</span></li>
                    <li class="list-group-item">In Service <span class="badge bg-info"><i class="bi bi-wrench"></i> @ViewBag.InServiceCount</span></li>
                    <li class="list-group-item">Fueling <span class="badge bg-warning"><i class="bi bi-gas-pump"></i> @ViewBag.FuelingCount</span></li>
                </ul>
            </div>
        </div>

        <div class="maintenance-container">
            <div class="header">Vehicle Maintenance Requests</div>

            @if (ViewBag.MaintenanceRequests != null && ViewBag.MaintenanceRequests.Count > 0)
            {
                @foreach (var maintenanceRequest in ViewBag.MaintenanceRequests)
                {
                    <div class="card border-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Request ID: @maintenanceRequest.Id</h5>
                            
                        </div>
                        <ul class="list-group list-group-flush">
                            <p class="card-text">Vehicle: @maintenanceRequest.LicensePlateNumber</p>
                            <li class="list-group-item">Detail: @maintenanceRequest.Detail</li>
                           
                        </ul>
                        
                    </div>
                }
            }
            else
            {
                <p>No pending Vehicle Maintenance requests.</p>
            }
        </div>

        <div class="col ">
            <div class="accident-container">
            <div class="header">Accident Requests</div>

            @if (ViewBag.AccidentRequests != null && ViewBag.AccidentRequests.Count > 0)
            {
                @foreach (var accidentRequest in ViewBag.AccidentRequests)
                {
                    <div class="card border-danger mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Request ID: @accidentRequest.Id</h5>

                        </div>
                        <ul class="list-group list-group-flush">
                            <p class="card-text">Vehicle: @accidentRequest.LicensePlateNumber</p>
                            <li class="list-group-item">Detail: @accidentRequest.Detail</li>

                        </ul>

                    </div>
                }
            }
            else
            {
                <p>No accident requests available.</p>
            }
        </div>
        </div>

        <div class="col">
            <div class="card">

                <div class="card-header">
                    Fuel Cost
                </div>
                <div class="card-body">

                    <canvas id="barChart"></canvas>
                </div>

                <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
                <script>
                    //bar
                    var ctxB = document.getElementById("barChart").getContext('2d');
                    var myBarChart = new Chart(ctxB, {
                        type: 'bar',
                        data: {
                            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                            datasets: [{
                                label: '# of Votes',
                                data: [12, 19, 3, 5, 2, 3],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 159, 64, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255,99,132,1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                </script>


            </div>
        </div>

        <div class="col">
            <div class="card">
                <div class="card-header">
                    Vehicle Expenses
                </div>
                <div class="card-body">
                    <canvas id="lineChart"></canvas>


                    <!-- Optional JavaScript -->
                    <!-- Chart.js -->
                    <script>
                        var ctxL = document.getElementById("lineChart").getContext('2d');
                        var myLineChart = new Chart(ctxL, {
                            type: 'line',
                            data: {
                                labels: ["January", "February", "March", "April", "May", "June", "July"],
                                datasets: [{
                                    label: "My First dataset",
                                    data: [65, 59, 80, 81, 56, 55, 40],
                                    backgroundColor: [
                                        'rgba(105, 0, 132, .2)',
                                    ],
                                    borderColor: [
                                        'rgba(200, 99, 132, .7)',
                                    ],
                                    borderWidth: 2
                                },
                                {
                                    label: "My Second dataset",
                                    data: [28, 48, 40, 19, 86, 27, 90],
                                    backgroundColor: [
                                        'rgba(0, 137, 132, .2)',
                                    ],
                                    borderColor: [
                                        'rgba(0, 10, 130, .7)',
                                    ],
                                    borderWidth: 2
                                }
                                ]
                            },
                            options: {
                                responsive: true
                            }
                        });
                    </script>
                </div>
            </div>
        </div>  
      
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  
</body>
</html>
